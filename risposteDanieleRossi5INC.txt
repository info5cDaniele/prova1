1) Che cos'è GitHub e quali sono le sue caratteristiche?
GitHub è un software utilizzato dai programmatori e altre persone che voglio condividere un progetto con diverse persone, e attraverso Git, che è un software per il controllo delle versioni di un file o un progetto, lavorare e modificare il progetto contemporaneamente.
GitHub non funge solo come software condivisionale ma è anche un modo per tenere salvati tutti i tuoi progetti insieme.
Inoltre ha anche delle funzionalità simili a quelle dei sociale, infatti, se una repository, cioè un progetto, è reso pubblico, una qualsiasi persona può visualizzarlo e commentare se ci sono problemi o se vuole dare consigli riguardo ad una funzionalità.
Infine c'è la possibilità di creare progetti o pubblici o privati, aggiungere direttamente nella cartella il tipo di licenza che si desidera utilizzare, e un file .gitignore che serve per far sapere, nel momento del push, quali file deve ignorare, perchè magari possono essere file temporanei creati dall'IDE che si sta utilizzando.
I comandi che GitHub fornisce sono: push e pull per aggiornare il progetto in remoto o in locale, commit per confermare e commentare delle modifiche apportate, branch e pull request(spiegati successivamente), stash e pop non usati molto, stash vieno usato nel momento in cui devi passare ad un altro task e quindi non vuoi fare un "mezzo commit" e quindi usi il comando stash per "mettere in pausa" le modifiche, successivamente usi il comando pop per riprendere quelle modifiche nel punto in cui le avevi lasciate.
GitHub è solitamente usato da linea di comando, ma esistono anche applicazioni desktop che permettono un utilizzo semplice e di tutte le funzionalità di GitHub, senza sapere i comandi effettivi.

2) Come si crea un repository privato?
Un repository è la cartella che conterrà il tuo progetto. Al momento della creazione di un repository, GitHub ti pone davanti due scelte: pubblico o privato. La possibilità di creare un repository pubblico è prevista nelle funzionalità base di GitHub, ma se si vuole creare un repository privato, bisogna prima pagare 7€ al mese per avere repository privati illimitati, oppure se si è studente c'è la possibilità di averli gratuitamente facendo richiesta per lo student pack di GitHub.
Inoltre se inizialmente si ha creato un repository pubblico, GitHub permette, attraverso le impostazioni, di convertirlo ad un repository privato.

3) Cosa si intende per fare un branch?
Un branch, è una funzionalità prevista da GitHub che permette di modificare il progetto contemporaneamente con altri collaboratori, senza andare ad interferire sulle loro modifiche. 
Infatti un branch è un vero proprio ramo del progetto, che si sviluppa parallelamente ad esso, ed una volta finito di effettuare le modifiche si può effettuare una "pull request", che è una richiesta di merge del branch con il progetto originale, ma prima di effettuarla realmente, GitHub controllerà se ci sono delle modifiche che interferiscono su altre modifiche fatte, e ti proporrà una soluzione per fare il merge correttamente, oppure se ci sono conflitti, permette di risolverli attraverso l'editor sul browser mostrandoti tutte e due le modifiche insieme, e lasciandoti a te il compito di fare il merge e poi dare conferma di modifica del progetto.
Sempre nel caso di conflitti, GitHub permette di avviare una discussione su quella pull request e quindi permette di risolvere tutti i conflitti collaborando con gli altri utenti.

4) Che cos'è e a cosa serve una issue?
Una issue è un vero e proprio problema da risolvere relativo ad un commit fatto oppure ad una pull request, infatti, se un collaboratore si accorge di qualche problema relativo ad una funzionalità appena inserita, può aprire una issue, cioè aprire una discussione sul problema, e risolverlo insieme ad altri collaboratori e non, nel caso fosse la repository fosse pubblica. Questo è possibile grazie alla funzionalità da social di GitHub, il quale permette di commentare modifiche o commenti stessi cosi creando una grande community che si aiuta a risolvere problemi. Oltre alla possibilità di commentare, esiste la possibilità di aggiungere tag alla issue che permettono di identificarla al meglio, ad esempio "urgente" oppure "priorità bassa". 

5) Cosa si fa quando si da il comando push in GitHub?
Quando si da il comando push in GitHub, si inviano le modifiche effettuate ad un file o più file al progetto in remoto, e queste vengo apportate anche nella repository effettiva e non solo in locale.
Infatti se si effettua solo il commit, che è il comando per confermare le modifiche ad un file o più file e successivamente tenerne traccia, le modifiche apportate rimarranno solo sul progetto in locale e non quello in remoto, perchè è il comando push che permette ad un collaboratore di inviare e apportare le modifiche alla repository in remoto.