1) Che cos'è GitHub e quali sono le sue caratteristiche?
GitHub è un software utilizzato dai programmatori e altre persone che voglio condividere un progetto con diverse persone, e attraverso Git, che è un software per il controllo delle versioni di un file o un progetto, lavorare e modificare il progetto contemporaneamente.
GitHub non funge solo come software condivisionale ma è anche un modo per tenere salvati tutti i tuoi progetti insieme.
Inoltre ha anche delle funzionalità simili a quelle dei sociale, infatti, se una repository, cioè un progetto, è reso pubblico, una qualsiasi persona può visualizzarlo e commentare se ci sono problemi o se vuole dare consigli riguardo ad una funzionalità.
Infine c'è la possibilità di creare progetti o pubblici o privati, aggiungere direttamente nella cartella il tipo di licenza che desideri utilizzare, e un file .gitignore che serve per far sapere, nel momento del push, quali file deve ignorare perchè magari possono essere file temporanei dell'IDE che si sta utilizzando

2) Come si crea un repository privato?
Al momento della creazione di un repository, GitHub ti pone davanti due scelte: pubblico o privato. La possibilità di creare un repository pubblico è prevista nelle funzionalità base di GitHub, ma se si vuole creare un repository privato, bisogna prima pagare 7€ al mese per avere repository privati illimitati, oppure se si è studente c'è la possibilità di averli gratuitamente facendo richiesta per lo student pack di GitHub.
Inoltre se inizialmente si ha creato un repository pubblico, GitHub permette, attraverso le impostazioni, di convertirlo di un repository privato.

3) Cosa si intende per fare un branch?
Un branch, è una funzionalità prevista da GitHub che permette di modificare il progetto contemporaneamente con altri collaboratori, senza andare ad interferire sulle loro modifiche. Infatti un branch è un vero proprio ramo del progetto, che si sviluppa parallelamente ad esso, ed una volta finito di effettuare le modifiche si può effettuare una "pull request" che è una richiesta di merge del branch con il progetto originale, ma prima di effettuarla realmente, GitHub controllerà se ci sono delle modifiche che interferiscono su altre modifiche fatte, e ti proporrà una soluzione per fare il merge correttamente, oppure se ci sono conflitti, permette di risolverli attraverso l'editor sul browser mostrandoti tutte e due le modifiche insieme, e lasciandoti a te il compito di fare il merge e poi dare conferma di modifica del progetto.